// <auto-generated />
using System;
using IncomePlannerDB.IncomePlannerDbService;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IncomePlannerDB.Migrations
{
    [DbContext(typeof(IncomePlannerDbContext))]
    [Migration("20240229105435_BankingTablesUpdate1")]
    partial class BankingTablesUpdate1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("IncomePlannerDB.IncomePlannerModels.AccountType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AccountTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountTypeName = "Savings Account"
                        },
                        new
                        {
                            Id = 2,
                            AccountTypeName = "Fixed Deposit Account"
                        },
                        new
                        {
                            Id = 3,
                            AccountTypeName = "Recurring Deposit Account"
                        },
                        new
                        {
                            Id = 4,
                            AccountTypeName = "Demat Account"
                        });
                });

            modelBuilder.Entity("IncomePlannerDB.IncomePlannerModels.Bank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BankName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsNationalisedBank")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Banks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BankName = "State Bank of India",
                            IsNationalisedBank = true
                        },
                        new
                        {
                            Id = 2,
                            BankName = "Canara Bank",
                            IsNationalisedBank = true
                        },
                        new
                        {
                            Id = 3,
                            BankName = "Union Bank of India",
                            IsNationalisedBank = true
                        },
                        new
                        {
                            Id = 4,
                            BankName = "HDFC Bank",
                            IsNationalisedBank = true
                        },
                        new
                        {
                            Id = 5,
                            BankName = "ICICI Bank",
                            IsNationalisedBank = true
                        },
                        new
                        {
                            Id = 6,
                            BankName = "Axis Bank",
                            IsNationalisedBank = true
                        },
                        new
                        {
                            Id = 7,
                            BankName = "Kotak Mahindra Bank",
                            IsNationalisedBank = true
                        });
                });

            modelBuilder.Entity("IncomePlannerDB.IncomePlannerModels.BankAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AccountTypeId")
                        .HasColumnType("int");

                    b.Property<int>("BankId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountTypeId");

                    b.HasIndex("BankId");

                    b.ToTable("BankAccounts");
                });

            modelBuilder.Entity("IncomePlannerDB.IncomePlannerModels.ChapterVIAOtherSection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("DepositInterest")
                        .HasColumnType("float");

                    b.Property<double>("DisabledDependent")
                        .HasColumnType("float");

                    b.Property<double>("Donations")
                        .HasColumnType("float");

                    b.Property<double>("EducationLoanInterest")
                        .HasColumnType("float");

                    b.Property<int>("FinancialYear")
                        .HasColumnType("int");

                    b.Property<double>("HousingLoanInterest")
                        .HasColumnType("float");

                    b.Property<double>("MedicalExpenses")
                        .HasColumnType("float");

                    b.Property<double>("Mediclaim")
                        .HasColumnType("float");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("NationalPensionScheme")
                        .HasColumnType("float");

                    b.Property<int>("TaxRegimeType")
                        .HasColumnType("int");

                    b.Property<double>("TotalInvestments")
                        .HasColumnType("float");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialYear");

                    b.HasIndex("TaxRegimeType");

                    b.ToTable("ChapterVIAOtherSections");
                });

            modelBuilder.Entity("IncomePlannerDB.IncomePlannerModels.ChapterVIASection80CC", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("EmployeesProvidentFund")
                        .HasColumnType("float");

                    b.Property<int>("FinancialYear")
                        .HasColumnType("int");

                    b.Property<double>("HomeLoanRepay")
                        .HasColumnType("float");

                    b.Property<double>("LifeInsurancePremium")
                        .HasColumnType("float");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("MutualFunds")
                        .HasColumnType("float");

                    b.Property<double>("NationalSavingsCertificate")
                        .HasColumnType("float");

                    b.Property<double>("Others")
                        .HasColumnType("float");

                    b.Property<double>("PublicProvidentFund")
                        .HasColumnType("float");

                    b.Property<int>("TaxRegimeType")
                        .HasColumnType("int");

                    b.Property<double>("TotalInvestments")
                        .HasColumnType("float");

                    b.Property<double>("TutionFee")
                        .HasColumnType("float");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialYear");

                    b.HasIndex("TaxRegimeType");

                    b.ToTable("ChapterVIASection80CC");
                });

            modelBuilder.Entity("IncomePlannerDB.IncomePlannerModels.ExpensesItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AdditionalCost")
                        .HasColumnType("float");

                    b.Property<double>("BaseCost")
                        .HasColumnType("float");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TableId")
                        .HasColumnType("int");

                    b.Property<double>("TotalCost")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("TableId");

                    b.ToTable("ExpensesItems");
                });

            modelBuilder.Entity("IncomePlannerDB.IncomePlannerModels.ExpensesTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FinancialYear")
                        .HasColumnType("int");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TableName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialYear");

                    b.ToTable("ExpensesTables");
                });

            modelBuilder.Entity("IncomePlannerDB.IncomePlannerModels.FinancialYear", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<string>("Year")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FinancialYears");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDefault = false,
                            Year = "2018-2019"
                        },
                        new
                        {
                            Id = 2,
                            IsDefault = false,
                            Year = "2019-2020"
                        },
                        new
                        {
                            Id = 3,
                            IsDefault = false,
                            Year = "2020-2021"
                        },
                        new
                        {
                            Id = 4,
                            IsDefault = false,
                            Year = "2021-2022"
                        },
                        new
                        {
                            Id = 5,
                            IsDefault = false,
                            Year = "2022-2023"
                        },
                        new
                        {
                            Id = 6,
                            IsDefault = true,
                            Year = "2023-2024"
                        });
                });

            modelBuilder.Entity("IncomePlannerDB.IncomePlannerModels.FixedDeposit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DurationInMonths")
                        .HasColumnType("int");

                    b.Property<double>("InterestRate")
                        .HasColumnType("float");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartingDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("FixedDeposits");
                });

            modelBuilder.Entity("IncomePlannerDB.IncomePlannerModels.MutualFund", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DurationInMonths")
                        .HasColumnType("int");

                    b.Property<double>("InterestRate")
                        .HasColumnType("float");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MutualFundName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartingDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("MutualFunds");
                });

            modelBuilder.Entity("IncomePlannerDB.IncomePlannerModels.RecurringDeposit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DurationInMonths")
                        .HasColumnType("int");

                    b.Property<double>("InterestRate")
                        .HasColumnType("float");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartingDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("RecurringDeposits");
                });

            modelBuilder.Entity("IncomePlannerDB.IncomePlannerModels.Saving", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("InterestRate")
                        .HasColumnType("float");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("Savings");
                });

            modelBuilder.Entity("IncomePlannerDB.IncomePlannerModels.TaxRegime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<string>("RegimeType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TaxRegimes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDefault = false,
                            RegimeType = "Old Tax Regime"
                        },
                        new
                        {
                            Id = 2,
                            IsDefault = true,
                            RegimeType = "New Tax Regime"
                        });
                });

            modelBuilder.Entity("IncomePlannerDB.IncomePlannerModels.UserHouseRentExcemption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("DearnessAllowance")
                        .HasColumnType("float");

                    b.Property<double>("ExemptedAmount")
                        .HasColumnType("float");

                    b.Property<int>("FinancialYear")
                        .HasColumnType("int");

                    b.Property<bool>("IsMetroCity")
                        .HasColumnType("bit");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TaxRegimeType")
                        .HasColumnType("int");

                    b.Property<double>("TotalRentPaidPerAnnum")
                        .HasColumnType("float");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FinancialYear");

                    b.HasIndex("TaxRegimeType");

                    b.ToTable("UserHouseRentExcemptions");
                });

            modelBuilder.Entity("IncomePlannerDB.IncomePlannerModels.UserSalary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("BasicPay")
                        .HasColumnType("float");

                    b.Property<double>("BonusPay")
                        .HasColumnType("float");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("EmployerProvidentFund")
                        .HasColumnType("float");

                    b.Property<int>("FinancialYear")
                        .HasColumnType("int");

                    b.Property<double>("Gratuity")
                        .HasColumnType("float");

                    b.Property<double>("HousingRentAllowance")
                        .HasColumnType("float");

                    b.Property<double>("LeaveTravelAllowance")
                        .HasColumnType("float");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("OtherAllowance")
                        .HasColumnType("float");

                    b.Property<int>("TaxRegimeType")
                        .HasColumnType("int");

                    b.Property<double>("TaxableIncome")
                        .HasColumnType("float");

                    b.Property<double>("TotalIncome")
                        .HasColumnType("float");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<double>("VariablePay")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("FinancialYear");

                    b.HasIndex("TaxRegimeType");

                    b.ToTable("UserSalarys");
                });

            modelBuilder.Entity("IncomePlannerDB.IncomePlannerModels.BankAccount", b =>
                {
                    b.HasOne("IncomePlannerDB.IncomePlannerModels.AccountType", "AccountTypes")
                        .WithMany("BankAccount")
                        .HasForeignKey("AccountTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IncomePlannerDB.IncomePlannerModels.Bank", "Banks")
                        .WithMany("BankAccount")
                        .HasForeignKey("BankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IncomePlannerDB.IncomePlannerModels.ChapterVIAOtherSection", b =>
                {
                    b.HasOne("IncomePlannerDB.IncomePlannerModels.FinancialYear", "FinancialYears")
                        .WithMany("ChapterVIAOtherSection")
                        .HasForeignKey("FinancialYear")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IncomePlannerDB.IncomePlannerModels.TaxRegime", "TaxRegimes")
                        .WithMany("ChapterVIAOtherSection")
                        .HasForeignKey("TaxRegimeType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IncomePlannerDB.IncomePlannerModels.ChapterVIASection80CC", b =>
                {
                    b.HasOne("IncomePlannerDB.IncomePlannerModels.FinancialYear", "FinancialYears")
                        .WithMany("ChapterVIASection80CC")
                        .HasForeignKey("FinancialYear")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IncomePlannerDB.IncomePlannerModels.TaxRegime", "TaxRegimes")
                        .WithMany("ChapterVIASection80CC")
                        .HasForeignKey("TaxRegimeType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IncomePlannerDB.IncomePlannerModels.ExpensesItem", b =>
                {
                    b.HasOne("IncomePlannerDB.IncomePlannerModels.ExpensesTable", "ExpensesTables")
                        .WithMany("ExpensesItem")
                        .HasForeignKey("TableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IncomePlannerDB.IncomePlannerModels.ExpensesTable", b =>
                {
                    b.HasOne("IncomePlannerDB.IncomePlannerModels.FinancialYear", "FinancialYears")
                        .WithMany("ExpensesTable")
                        .HasForeignKey("FinancialYear")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IncomePlannerDB.IncomePlannerModels.FixedDeposit", b =>
                {
                    b.HasOne("IncomePlannerDB.IncomePlannerModels.BankAccount", "BankAccounts")
                        .WithMany("FixedDeposit")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IncomePlannerDB.IncomePlannerModels.MutualFund", b =>
                {
                    b.HasOne("IncomePlannerDB.IncomePlannerModels.BankAccount", "BankAccounts")
                        .WithMany("MutualFund")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IncomePlannerDB.IncomePlannerModels.RecurringDeposit", b =>
                {
                    b.HasOne("IncomePlannerDB.IncomePlannerModels.BankAccount", "BankAccounts")
                        .WithMany("RecurringDeposit")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IncomePlannerDB.IncomePlannerModels.Saving", b =>
                {
                    b.HasOne("IncomePlannerDB.IncomePlannerModels.BankAccount", "BankAccounts")
                        .WithMany("Saving")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IncomePlannerDB.IncomePlannerModels.UserHouseRentExcemption", b =>
                {
                    b.HasOne("IncomePlannerDB.IncomePlannerModels.FinancialYear", "FinancialYears")
                        .WithMany("UserHouseRentExcemption")
                        .HasForeignKey("FinancialYear")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IncomePlannerDB.IncomePlannerModels.TaxRegime", "TaxRegimes")
                        .WithMany("UserHouseRentExcemption")
                        .HasForeignKey("TaxRegimeType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IncomePlannerDB.IncomePlannerModels.UserSalary", b =>
                {
                    b.HasOne("IncomePlannerDB.IncomePlannerModels.FinancialYear", "FinancialYears")
                        .WithMany("UserSalary")
                        .HasForeignKey("FinancialYear")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IncomePlannerDB.IncomePlannerModels.TaxRegime", "TaxRegimes")
                        .WithMany("UserSalary")
                        .HasForeignKey("TaxRegimeType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
